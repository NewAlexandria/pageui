<?phpfunction AddGroup ( $new_group, $page_id, $row = 0, $col = 0) {	// add check for if group name already exists	//  this is both for the user's groups, as well as for the any user group in the system	/// check group capitalization usage	global $errtxt;		$sql = "SELECT G.id, G.Title FROM Groups G WHERE Title LIKE '".$new_group."'";	$errtxt .= $sql;		$result = mysql_query($sql);	$errtxt .= '<br />'.mysql_num_rows($result);	// this row did not exist in the system, so we have to make it	if (mysql_num_rows($result) == 0) {					// do the insert			$sql = "INSERT INTO Groups (Title, date_created) VALUES ('".$new_group."', '".date("Y-m-d h:i:s A")."')";		$result = mysql_query($sql);		$errtxt .= '<br />'.$sql;		// get group_id		$group_id = mysql_insert_id(); 		$errtxt .=  '<br /> new id: '.mysql_insert_id();	} else {		if (mysql_num_rows($result) > 1) {				/// flag the administrator, there is a chance of data corruption in the Groups table		}		// the group exists in the system; get it's ID and find out if the user has already used this group name				$res = mysql_fetch_assoc($result);		$group_id = $res['id'];	}	// now we have the group_id	// it could be : just made (no GP row), new to the user (no GP row), already in use by them (GP row exists)		// czech to see if the group is already in use 			/// ?? max number of rows for groups on any given page is 99.  seems sufficient (given, say, 4 cols of groups per row = 396), but variable with the row # of the system group "unsorted"	$sql = "SELECT GP.row, GP.col FROM GroupsPages GP INNER JOIN Links L ON GP.group_id = L.group_id WHERE GP.row < 100 AND L.user_id = GP.user_id AND L.user_id = ".$_SESSION['user_id']." AND GP.page_id = ".$_SESSION['page_id']." AND GP.group_id = ".$group_id." GROUP BY GP.row, GP.col";	$errtxt .= $sql;		$result = mysql_query($sql);	$errtxt .= '<br />rows in GP table matching group_id: '.mysql_num_rows($result);	// if a row was returned then we're set and clear for a link INSERT	if (mysql_num_rows($result) == 0) {//			mysql_data_seek($result, (mysql_num_rows($result) - 1) );	// if there is no return, then we need a row for the group in GP		// first, we need the row and col to insert		$sql = "SELECT MAX(GP.row) as row, MAX(GP.col) as col FROM GroupsPages GP INNER JOIN Links L ON GP.group_id = L.group_id WHERE GP.row < 100 AND L.user_id = GP.user_id AND L.user_id = ".$_SESSION['user_id']." AND GP.page_id = ".$_SESSION['page_id']." GROUP BY GP.group_id, GP.col, GP.row ORDER BY GP.row, GP.col";		$errtxt .= '<BR/> '.$sql;			$result = mysql_query($sql);		$errtxt .= '<br />'.mysql_num_rows($result);		if (mysql_num_rows($result) > 0) {			mysql_data_seek($result, (mysql_num_rows($result) - 1) );			$resGroupMax = mysql_fetch_assoc($result);			$errtxt .= '<br />pre Row: '.$row.'  Col: '.$col;			$row = $resGroupMax['row'];			$col = $resGroupMax['col'];						//set the values for insertion of new group			/// THREE COL MAX is hardcoded......			if ($col < 3) {				$col += 1;				// keep row the same			} else {				$row += 1;				$col = 1;			}			$errtxt .= '<br />post Row: '.$row.'  Col: '.$col;		} else {		// else, the didn't have any groups on the page			/// if this is the first group of their first page, perhaps we should congratulate them			$msg = "Huzzah! The first group of this page";			$row = 1;			$col = 1;		}		$errtxt .= '<br />final Row: '.$row.'  Col: '.$col;			// else we must have just inserted it	} else {	$errtxt .= '<br />forced Row: '.$row.'  Col: '.$col;		$row = 1;		$col = 1;			}			// now we INSERT into GP	$sql = "INSERT INTO GroupsPages (group_id, page_id, user_id, row, col, date_created) VALUES (".$group_id.", ".$page_id.", ".ReturnSecureString($_SESSION['user_id']).", ".$row.", ".$col.", '".date("Y-m-d")."')";	$errtxt .= $sql;		$result = mysql_query($sql);		return $group_id;}?>