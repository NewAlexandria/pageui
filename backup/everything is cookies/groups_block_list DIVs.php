<?php session_start();require_once('config/keys.php');require_once('config/db.php');	/// User logins should be validated against a system login table, and the table should include a variable specific to the login cookie data: either a browser-generated cookie ID, or a seeded rand() saved as cookie var.  If it were hashed against the user password hash then its closer to a cryptographic login validation$sql = "SELECT L.col, L.row, G.Title AS GTitle, GP.row as grow, GP.col as gcol, G.id as gid, L.* FROM Groups G INNER JOIN GroupsPages as GP ON GP.group_id = G.id INNER JOIN Pages P ON GP.page_id = P.id LEFT OUTER JOIN Links as L ON (L.user_id = GP.user_id AND L.group_id = GP.group_id AND L.page_id = GP.page_id ) WHERE GP.user_id = ".$_SESSION['user_id']." AND GP.page_id = ".$_SESSION['page_id']." ORDER BY GP.row, GP.col, L.col, L.row";// echo $sql;$result = mysql_query($sql);$errtxt .= '<br/>'.$sql;$errtxt .= '<br/>sql error: '.mysql_error($db).''; $errtxt .= '<br/>rows: '.mysql_num_rows($result).'<br/>'; // this is buit for the links tha re-organize the list of links$sort_url = $site_uri.substr($_SERVER['SCRIPT_NAME'], 1);// $_SERVER['SCRIPT_NAME']?>		<div><?php 		if (mysql_num_rows($result)>0) { 			$grow_last = 0;			$gcol_last = 0;			$lcol_last = 0;			$grow_close = '';			$gcol_close = '';			$lcol_close = '';			$gid_last = '';						//	these 4 strings allow the DB while loop to build the list of groups and links that need to be activated via jQuery			$AJAX_group_sortables = '';			$AJAX_group_sortable_connections = '';			$AJAX_link_sortables = '';			$AJAX_link_sortable_connections = '';			$AJAX_group_originals = "";			echo '				<div class="group_row_new" id="groupsRow_'.('n'.$grow_last).'"></div>'.$crlf; 			$AJAX_group_sortables .= '$("#groupsRow_'.('n'.$grow_last).'").sortable({ %%%, dropOnEmpty: true, update: function(element, ui) { updateGroupSort ("#groupsRow_'.('n'.$grow_last).'", "'.('n'.$grow_last).'"); }, start: function(e, ui) { groupsSortStart(); }, stop: function(e, ui) { groupsSortStop(); }, over: function(e, ui) { groupsSortOver( e, ui); }, change: function(e, ui) { groupsSortChange( e, ui); }, receive: function(e, ui) { groupsSortReceive( e, ui); } });'.$crlf; 			$AJAX_group_sortable_connections .= ', "#groupsRow_'.('n'.$grow_last).'"';							while ( $res = mysql_fetch_assoc($result) ) { 				$grow = $res['grow'];				$gcol = $res['gcol'];				$lcol = $res['col'];				if ($lcol = '-1' ) $lcol = '1';				$edit_link = $site_uri.$site_path.'edit.php?link_id='.$res['id']; 				if ( $grow_close != '') {  // set to a value at the end of each loop.  ensures that the LIs and ULs aren't closed on the first loop.					if ( $grow_last != $grow ) {						echo '				</div><div type="none"  class="link_col" id="links_g'.$gid_last.'c'.($lcol_last+1).'"></div></div></div>'.$crlf;						echo '			<div class="group_row_new" id="groupsRow_'.('n'.$grow_last).'"></div>'.$crlf; 												$AJAX_group_sortables .= '$("#groupsRow_'.('n'.$grow_last).'").sortable({ %%%, dropOnEmpty: true, update: function(element, ui) { updateGroupSort ("#groupsRow_'.('n'.$grow_last).'", "'.('n'.$grow_last).'"); }, start: function(e, ui) { groupsSortStart(); }, stop: function(e, ui) { groupsSortStop(); }, over: function(e, ui) { groupsSortOver( e, ui); }, change: function(e, ui) { groupsSortChange( e, ui); }, receive: function(e, ui) { groupsSortReceive( e, ui); } });'.$crlf; 						$AJAX_link_sortables .= '$("#links_g'.$gid_last.'c'.($lcol_last+1).'").sortable({ %%%, update: function(element, ui) { updateLinkSort ("#links_g'.$gid_last.'c'.($lcol_last+1).'", "n'.($lcol_last+1).'", "'.$gid_last.'"); }, start: function(e, ui) { linksSortStart(); }, stop: function(e, ui) { linksSortStop(); } });'.$crlf; 						//-------- BUILD sortables CONNECTIONS						$AJAX_link_sortable_connections .= ', "#links_g'.$gid_last.'c'.($lcol_last+1).'"';						$AJAX_group_sortable_connections .= ', "#groupsRow_'.('n'.$grow_last).'"';					} else if ( $gcol_last != $gcol ) {						echo '				</div><div type="none"  class="link_col" id="links_g'.$gid_last.'c'.($lcol_last+1).'"></div></div>'.$crlf;												$AJAX_link_sortables .= '$("#links_g'.$gid_last.'c'.($lcol_last+1).'").sortable({ %%%, update: function(element, ui) { updateLinkSort ("#links_g'.$gid_last.'c'.($lcol_last+1).'", "n'.($lcol_last+1).'", "'.$gid_last.'"); }, start: function(e, ui) { linksSortStart(); }, stop: function(e, ui) { linksSortStop(); } });'.$crlf; 						//-------- BUILD sortables CONNECTIONS						$AJAX_link_sortable_connections .= ', "#links_g'.$gid_last.'c'.($lcol_last+1).'"';					} else if ( $lcol_last != $lcol ) {						echo '				</div>'.$crlf;					}				}								// UL tags inserted with an id based on their group_id and link_col								if ( $grow_last != $grow ) {  // if this is a new group row								//// need calls here for srtat and stop of sort to highlight targets								//-------- BUILD sortables CALLS				$AJAX_group_sortables .= '$("#groupsRow_'.$res['grow'].'").sortable({ %%%, dropOnEmpty: true, update: function(element, ui) { updateGroupSort ("#groupsRow_'.$res['grow'].'", '.$res['grow'].'); }, start: function(e, ui) { groupsSortStart(); }, stop: function(e, ui) { groupsSortStop(); }, over: function(e, ui) { groupsSortOver( e, ui); }, change: function(e, ui) { groupsSortChange( e, ui); }, receive: function(e, ui) { groupsSortReceive( e, ui); } });'.$crlf; 				$AJAX_link_sortables .= '$("#links_g'.$res['gid'].'c'.$lcol.'").sortable({ %%%, update: function(element, ui) { updateLinkSort ("#links_g'.$res['gid'].'c'.$lcol.'", "'.$lcol.'", "'.$res['gid'].'"); }, start: function(e, ui) { linksSortStart(); }, stop: function(e, ui) { linksSortStop(); } });'.$crlf; //				$AJAX_link_sortables .= '$("#links_g'.$res['gid'].'c'.($lcol-1).'").sortable({ %%%, update: function(element, ui) { updateLinkSort ("#links_g'.$res['gid'].'c'.($lcol-1).'", "'.($lcol-1).'", "'.$res['gid'].'"); }, start: function(e, ui) { linksSortStart(); }, stop: function(e, ui) { linksSortStop(); } });'.$crlf; 								//-------- BUILD sortables CONNECTIONS				$AJAX_link_sortable_connections .= ', "#links_g'.$res['gid'].'c'.$lcol.'"';//				$AJAX_link_sortable_connections .= ', "#links_g'.$res['gid'].'c'.($lcol-1).'"';				$AJAX_group_sortable_connections .= ', "#groupsRow_'.$res['grow'].'"';								$AJAX_link_sortable_updates = 'update: linkUpdate(element, ui, "'.') ")';								$AJAX_group_originals .= "g_orig[".$res['gid']."] = $('#group_".$res['gid']."_name').html();\n";				?>				<div class="group_row" id="groupsRow_<?php echo $res['grow']?>">				<div class="group_block" id="group_<?php echo $res['gid']?>">					<table cellpadding="0" cellspacing="0" width="100%"class="group_title"><tr><td>						<div name="group_<?php echo $res['gid']?>_name" id="group_<?php echo $res['gid']?>_name"><?php echo $res['GTitle']?> <?php if ($_SESSION['DEBUG']==1) echo $res['gid']?></div>					</td><td align="right"><div class="link_UI_element">						<a href="javascript:updateGroup_UI(<?php echo $res['gid']; ?>, 'group_<?php echo $res['gid']?>', '<?php echo $res['GTitle']?>');" style="padding: 0 2px 0 1px; ">E</a> 						<a href="javascript:deleteGroup('<?php echo $res['gid']; ?>');" style=" padding: 0 1px 0 1px; ">X</a>					</div></td></tr></table>					<!-- 					<div type="none" class="link_col" id="links_g<?php echo $res['gid']?>c<?php echo ($lcol-1)?>"></div`> -->					<div type="none" class="link_col" id="links_g<?php echo $res['gid']?>c<?php echo $lcol?>">					<?php			} else if ( $gcol_last != $gcol ) {  // if this is a new group col				//-------- BUILD sortables CALLS				$AJAX_link_sortables .= '$("#links_g'.$res['gid'].'c'.$lcol.'").sortable({ %%%, update: function(element, ui) { updateLinkSort ("#links_g'.$res['gid'].'c'.$lcol.'", "'.$lcol.'", "'.$res['gid'].'"); }, start: function(e, ui) { linksSortStart(); }, stop: function(e, ui) { linksSortStop(); } });'.$crlf; //				$AJAX_link_sortables .= '$("#links_g'.$res['gid'].'c'.($lcol-1).'").sortable({ %%%, update: function(element, ui) { updateLinkSort ("#links_g'.$res['gid'].'c'.($lcol-1).'", "'.($lcol-1).'", "'.$res['gid'].'"); }, start: function(e, ui) { linksSortStart(); }, stop: function(e, ui) { linksSortStop(); } });'.$crlf; 				//-------- BUILD sortables CONNECTIONS				$AJAX_link_sortable_connections .= ', "#links_g'.$res['gid'].'c'.$lcol.'"';//				$AJAX_link_sortable_connections .= ', "#links_g'.$res['gid'].'c'.($lcol-1).'"';								?>				<div class="group_block" id="group_<?php echo $res['gid']?>">					<table cellpadding="0" cellspacing="0" width="100%"class="group_title"><tr><td>						<div name="group_<?php echo $res['gid']?>_name" id="group_<?php echo $res['gid']?>_name"><?php echo $res['GTitle']?> <?php if ($_SESSION['DEBUG']==1) echo $res['gid']?></div>					</td><td align="right"><div class="link_UI_element">						<a href="javascript:updateGroup_UI('<?php echo $res['gid']; ?>', 'group_<?php echo $res['gid']?>', '<?php echo $res['GTitle']?>');" style="padding: 0 2px 0 1px; ">E</a> 						<a href="javascript:deleteGroup('<?php echo $res['gid']; ?>');" style=" padding: 0 1px 0 1px; ">X</a>					</div></td></tr></table>					<!-- 					<div type="none" class="link_col" id="links_g<?php echo $res['gid']?>c<?php echo ($lcol-1)?>"></div> -->					<div type="none" class="link_col" id="links_g<?php echo $res['gid']?>c<?php echo $lcol?>">					<?php			} else if ( $lcol_last != $lcol ) { // if this is a new link col				//-------- BUILD sortables CALLS				$AJAX_link_sortables .= '$("#links_g'.$res['gid'].'c'.$lcol.'").sortable({ %%%, update: function(element, ui) { updateLinkSort ("#links_g'.$res['gid'].'c'.$lcol.'", "'.$lcol.'", "'.$res['gid'].'"); }, start: function(e, ui) { linksSortStart(); }, stop: function(e, ui) { linksSortStop(); } });'.$crlf; 				//-------- BUILD sortables CONNECTIONS				$AJAX_link_sortable_connections .= ', "#links_g'.$res['gid'].'c'.$lcol.'"';				// echo $lcol_close; 				?>					<div type="none" class="link_col" id="links_g<?php echo $res['gid']?>c<?php echo $lcol?>">					<?php			}					if ( $res['URL'] != '' ) {				//	the link row will always change / be new		?>						<div context="link_<?php echo $res['id']?>" class="link" id="link_<?php echo $res['id']?>">							<div><a href="<?php echo $res['URL']?>" target="_blank"><?php echo $res['title']?></a></div>													<div class="link_UI_element tmenu">								<a href="javascript:updateLink_UI('<?php echo $res['id']; ?>', 'link_<?php echo $res['id']?>');" style="padding: 0 2px 0 1px; ">E</a> 								<a href="javascript:deleteLink('<?php echo $res['id']; ?>');" style=" padding: 0 1px 0 1px; ">X</a>							</div>						</div><?php			// these IFs allow any wrap-up code, given something new					}				if ( $lcol_last != $lcol ) { ?>				<?php			}				if ( $gcol_last != $gcol ) { ?>				<?php			}				if ( $grow_last != $grow ) { 				?><?php			} 							$grow_last = $grow;				$gcol_last = $gcol;				$lcol_last = $lcol;				$gid_last = $res['gid'];				$grow_close = '				</div><div class="link_col" id="links_g'.$gid_last.'c'.($lcol_last+1).'"></div></div>'.$crlf;				$gcol_close = '				</div><div class="link_col" id="links_g'.$gid_last.'c'.($lcol_last+1).'"></div></div>'.$crlf;				$lcol_close = '				</div>'.$crlf;							} 			?>			</div>			<div class="link_col" id="links_g<?php echo $gid_last ?>c<?php echo ($lcol_last+1) ?>"></div>		</div>		</div>			<?php			$AJAX_link_sortables .= '$("#links_g'.$gid_last.'c'.($lcol_last+1).'").sortable({ %%%, update: function(element, ui) { updateLinkSort ("#links_g'.$gid_last.'c'.($lcol_last+1).'", "n'.($lcol_last+1).'", "'.$gid_last.'"); }, start: function(e, ui) { linksSortStart(); }, stop: function(e, ui) { linksSortStop(); } });'.$crlf; 		//-------- BUILD sortables CONNECTIONS		$AJAX_link_sortable_connections .= ', "#links_g'.$gid_last.'c'.($lcol_last+1).'"';							echo '			<div class="group_row_new" id="groupsRow_'.('n'.$grow_last).'"></div>'.$crlf; 			$AJAX_group_sortables .= '$("#groupsRow_'.('n'.$grow_last).'").sortable({ %%%, dropOnEmpty: true, update: function(element, ui) { updateGroupSort ("#groupsRow_'.('n'.$grow_last).'", "'.('n'.$grow_last).'"); }, start: function(e, ui) { groupsSortStart(); }, stop: function(e, ui) { groupsSortStop(); }, over: function(e, ui) { groupsSortOver( e, ui); }, change: function(e, ui) { groupsSortChange( e, ui); }, receive: function(e, ui) { groupsSortReceive( e, ui); } });'.$crlf; 			$AJAX_group_sortable_connections .= ', "#groupsRow_'.('n'.$grow_last).'"';				// here we finalize the connection strings, then insert them into the .sortable calls				$AJAX_link_sortable_connections = 'connectWith: ['.substr($AJAX_link_sortable_connections, 2).']'; 				$AJAX_link_sortables = str_replace("%%%", $AJAX_link_sortable_connections, $AJAX_link_sortables);								$arr = explode(",", substr($AJAX_group_sortable_connections, 2));								$AJAX_group_sortable_connections = 'connectWith: ['.substr($AJAX_group_sortable_connections, 2).']';					$AJAX_group_sortables = str_replace("%%%", $AJAX_group_sortable_connections, $AJAX_group_sortables);		}	?>						</div><?php if ( strstr($_SESSION['cur_page'], 'edit') ) { ?><script type="text/javascript"><!--/**************** LINK UI ******************/function updateLink_UI( l_id, element ) {	if ( updateState == 0 ) {			if ( updateStateGroup == 1 ) {			$("#groups_UI").fadeOut('fast', function() { $("#groups_UI").remove(); });			updateStateGroup = 0;				}		$.post("links_edit_front.php", { link_id: l_id },		  function(data){		  	$(data).appendTo("#links_groups");		  			  	// positioning			var dim = $("#"+element).offset();		  	$("#links_UI").css( { display: "none", top: dim.top, left: dim.left } );		  			  	// ergonomics		  	$("#new_link_form").css( { visibility: "hidden" } );		  	$("#links_UI").show(290, function() { $("#new_link_form").css( { visibility: "visible" } ); });		  	$("#new_link_form").fadeIn();		 }); 		updateState = 1;	} else {		$("#links_UI").fadeOut('fast', function() { $("#links_UI").remove(); });				updateState = 0;	}}function addLink_UI(  ) {	if ( updateState == 0 ) {		if ( updateStateGroup == 1 ) {			$("#groups_UI").fadeOut('fast', function() { $("#groups_UI").remove(); });			updateStateGroup = 0;				}		$.post("links_edit_front.php?new=1",		  function(data){		  	$(data).appendTo("#links_groups");		  			  	// positioning			var dim = $("#links_groups").offset();		  	$("#links_UI").css( { display: "none", top: dim.top+10, left: dim.left+10 } );		  			  	// ergonomics		  	$("#new_link_form").css( { visibility: "hidden" } );		  	$("#links_UI").show(290, function() { $("#new_link_form").css( { visibility: "visible" } ); });		  	$("#new_link_form").fadeIn();		 }); 		updateState = 1;	} else {		$("#links_UI").fadeOut('fast', function() { $("#links_UI").remove(); });		updateState = 0;	}}var limit = '1,2';/********************* LINK MANAGEMENT ********************/function updateLinkSort( nameL, col, gid ) {	$('#notify').load('config/links.php?AJAX=1&proc=updateSort&col=' + col + '&group_id=' + gid + '&' + $(nameL).sortable('serialize'), function() { 			refreshContent();	});}function deleteLink( link_id ) {	var b = confirm("Sure you want to delete this link?");	if ( b == true) {		$('#notify').load('config/links.php?AJAX=1&proc=delete&link_id=' + link_id, function() { 			refreshContent();		});			} else {	  // return	}			}/********************* LINK SORTING ********************/function linksSortStart(  ) {//	alert('s');	$(".link_col").css({ border:"1px #DAD5B8 solid", margin:"0 2px 0 2px", padding:"0px 2px 0px 2px" });}function linksSortStop(  ) {	$(".link_col").css({ border:"none",	margin:"0 3px 0 3px", padding:"1px 2px 1px 2px" });}/********************* GROUP UI ********************/function updateGroup_UI( g_id, element, Title ) {	if ( updateStateGroup == 0 ) {			if ( updateState == 1 ) {			$("#links_UI").fadeOut('fast', function() { $("#links_UI").remove(); });			updateState = 0;				}		$('#group_'+g_id+'_name').load('DHTML/updateGroups.php?group_id=' + g_id + '&name='+escape(Title));/*		$.post("groups_edit_front.php", { link_id: g_id },		  function(data){		  	$(data).appendTo("#links_groups");		  			  	// positioning			var dim = $("#"+element).offset();		  	$("#groups_UI").css( { display: "none", top: dim.top, left: dim.left } );		  			  	// ergonomics		  	$("#new_link_form").css( { visibility: "hidden" } );		  	$("#groups_UI").show(290, function() { $("#new_link_form").css( { visibility: "visible" } ); });		  	$("#new_link_form").fadeIn();		 }); 		 */		updateStateGroup = 1;	} else {//		$("#group_UI").fadeOut('fast', function() { $("#links_UI").remove(); });		$('#group_'+g_id+'_name').html(Title);		updateStateGroup = 0;	}}	function addGroup_UI(  ) {	if ( updateStateGroup == 0 ) {		if ( updateState == 1 ) {			$("#links_UI").fadeOut('fast', function() { $("#links_UI").remove(); });			updateState = 0;		}				$.post("groups_edit_front.php?new=1",		  function(data){		  	$(data).appendTo("#links_groups");		  			  	// positioning			var dim = $("#links_groups").offset();		  	$("#groups_UI").css( { display: "none", top: dim.top+10, left: dim.left+10 } );		  			  	// ergonomics		  	$("#new_group_form").css( { visibility: "hidden" } );		  	$("#groups_UI").show(290, function() { $("#new_group_form").css( { visibility: "visible" } ); });		  	$("#new_group_form").fadeIn();		 }); 		updateStateGroup = 1;	} else {		$("#groups_UI").fadeOut('fast', function() { $("#groups_UI").remove(); });		updateStateGroup = 0;	}}/********************* GROUP MANAGEMENT ********************/function deleteGroup( g_id ) {	var b = confirm("Sure you want to delete this group?\nAll its links will go, too!");	if ( b == true) {		$('#notify').load('config/groups.php?AJAX=1&proc=delete&user_id='+user_id+'&page_id='+page_id+'&group_id=' + g_id, function() { 			refreshContent();		});			} else {	  // return	}			}		function updateGroupSort( nameL, grow ) {	$('#notify').load('config/groups.php?AJAX=1&proc=updateSort&grow=' + grow + '&' + $(nameL).sortable('serialize'), function() { 			refreshContent();	});}function NEW_updateGroupSort( nameL, grow ) {	// add the groupsort data to a queue	$('#notify').load('config/groups.php?AJAX=1&proc=updateSort&grow=' + grow + '&' + $(nameL).sortable('serialize'), function() { 			refreshContent();	});	if ( execGroupSort == 0) {		}}/********************* GROUP SORTING ********************/function groupsSortStart(  ) {	$(".group_row").css({ border:"1px #ccc solid" });	$(".group_row_new").css({ minHeight: "1px", border:"1px #ccc solid" });/*	$(".group_row").hover( function() { 		$(this).css({ border:"1px #000 solid" });	}, function() {		$(this).css({ border:"none" });	});*/}function groupsSortStop(  ) {	$(".group_row").css({ border:"none" });	$(".group_row_new").css({ minHeight: "1px", border:"1px #fff solid" });	$(".group_row").hover( function() { });}function groupsSortChange( e, ui ) {	}function groupsSortReceive( e, ui ) {}function groupsSortOver( e, ui ) {//  mad event print debugging::/*//	alert (e.target.id);	for (x in e.toElement.parentElement) $('#notify_d_this_page_errtxt').html( $('#notify_d_this_page_errtxt').html() + '<br/>'+ x + ':' + e.toElement.offsetParent[x] );//	$('#notify_d_this_page_errtxt').html( $('#notify_d_this_page_errtxt').html() + '<br/>'+ e.target.id );	//	$("#"+ui.item[0].id).css({ border:"1px #777 solid" });	$('#notify_d_this_page_errtxt').html( $('#notify_d_this_page_errtxt').html() + '<br/>' );*/}/********************* UTILITIES ********************/function outputarray(element, index, array) {	$('#notify_d_this_page_errtxt').text( $('#notify_d_this_page_errtxt').text() +  "Element "+index+" contains the value "+element+"\n" );}function refreshContent() {	$('#links_groups').load('groups_block_list.php');			$('#links_flat_list').load('links_flat_list.php');	$('#notify_d_last_page_errtxt').load('config/almanac.php?uid=<?php echo $_SESSION["user_id"]?>&limit=' + limit + '&AJAX=1');}			function combinedGroupSort() {	execGroupSort = 0;}			updateState = 0;updateStateGroup = 0;execGroupSort = 0;user_id = <?php echo $_SESSION['user_id'] ?>;page_id = <?php echo $_SESSION['page_id'] ?>;g_orig = Array ();<?php 	// lastly, we echo these into place... and, as per the if above, only when we're on the edit page!  if-excluding these throughout the while loop would probably be more costly than building the string and doing nothing with it		echo $AJAX_link_sortables; 	echo $AJAX_group_sortables; 	echo $AJAX_group_originals;?>//--></script><?php}	if ( ($_SESSION['DEBUG']=='1') and ( strstr($_SESSION['cur_page'], 'edit') ) ) { ?>	<script type="text/javascript"><!--	$('#notify_d_page_id').text("<?php echo $_SESSION['page_id'];?> (from groups_block_list)");	$('#notify_d_this_page_errtxt').html( $('#notify_d_this_page_errtxt').html() +  "<?php echo $errtxt;?>" + "<br /><?php echo $_SESSION['page_id'];?> (from groups_block_list)" );//--></script><?php	}?>