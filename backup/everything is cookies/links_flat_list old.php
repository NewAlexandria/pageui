<?php /// User logins should be validated against a system login table, and the table should include a variable specific to the login cookie data: either a browser-generated cookie ID, or a seeded rand() saved as cookie var.  If it were hashed against the user password hash then its closer to a cryptographic login validationif ($links_flat_list_sort) {	switch ( $links_flat_list_sort )	{	    case "group":	        $order = ' ORDER BY L.group_id, G.row, G.col, L.col, L.row';	        break;	    case "date":	        $order = ' ORDER BY L.date_add';	        break;	    case "title":	        $order = ' ORDER BY L.title';	        break;	    case "URL":	        $order = ' ORDER BY L.URL';	        break;	    default:	        $order = ' ORDER BY L.group_id, G.row, G.col, L.col, L.row';	        break;	}	} $sql = "SELECT G.Title AS GTitle, G.row as grow, G.col as gcol, G.id as gid, L.* FROM Links as L INNER JOIN GroupsPages as GP ON L.group_id = GP.group_id INNER JOIN Groups G ON GP.group_id = G.id INNER JOIN Pages P ON GP.page_id = P.id WHERE L.user_id = ".$_SESSION['user_id']." AND GP.page_id = ".$_SESSION['page_id'].$order;// echo $sql;$result = mysql_query($sql);$errtxt .= $sql;$errtxt .= '<br/>rows: '.mysql_num_rows($result).'<br/>'; 		if (mysql_num_rows($result)>0) {			$newG = 0;		//	echo mysql_num_rows($result);			echo '<table>';	//		echo "<tr><td>group</td><td>link</td></tr>";			echo '<tr>';				// init the group_id			$res = mysql_fetch_assoc($result);			$last_group = $res['gid'];			$cur_group = '';					mysql_data_seek($result, 0);				while ( $res = mysql_fetch_assoc($result) ) {				// if new group, print stuff				if ( $res['gid'] <> $cur_group) {					echo '<td class="header-group">'.$res['GTitle'].'</td>';  //</tr>'.$crlf.'<tr>';					$last_group = $cur_group;					$cur_group = $res['gid'];				} else {					echo '<td> </td>';				}								echo '<td><a href="'.$res['URL'].'">'.$res['title'].'</a></td>';								//// make this work for groups	//			if ($res['grow'] == 1 & $res['gcol'] == 1) { 					echo '</tr>'.$crlf.'<tr>'; 	//			}					$cur_group = $res['gid'];		/*				while ( $res = mysql_fetch_assoc($result) ) { 					/// if new col, print stuff					while ( $res = mysql_fetch_assoc($result) ) { 						echo '<div class="link"><a href="'.$res['URL'].'">'.$res['title'].'</a></div>';					}				}		*/				$last_group = $res['gid'];			}			echo '</table><br/><br/>';		}?>